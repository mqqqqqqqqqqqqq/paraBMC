-----------------------------------------------------------------------------------
current_rule:  server_connect1
init_fomula:  [Or(And(link[2][1]@0 == False, semaphore[1]@0 == True),
   And(link[1][1]@0 == False, semaphore[1]@0 == True))]
guard_formula:  [semaphore[1]@0 == True, semaphore[1]@1 == True, semaphore[1]@2 == True, semaphore[1]@3 == True, semaphore[1]@4 == True, semaphore[1]@5 == True, semaphore[1]@6 == True, semaphore[1]@7 == True, semaphore[1]@8 == True]
assign_formula:  [And(semaphore[1]@1 == False, link[1][1]@1 == True), And(semaphore[1]@2 == False, link[1][1]@2 == True), And(semaphore[1]@3 == False, link[1][1]@3 == True), And(semaphore[1]@4 == False, link[1][1]@4 == True), And(semaphore[1]@5 == False, link[1][1]@5 == True), And(semaphore[1]@6 == False, link[1][1]@6 == True), And(semaphore[1]@7 == False, link[1][1]@7 == True), And(semaphore[1]@8 == False, link[1][1]@8 == True), And(semaphore[1]@9 == False, link[1][1]@9 == True)]
assumption_formula:  [link[2][1]@1 == link[2][1]@0, link[2][1]@2 == link[2][1]@1, link[2][1]@3 == link[2][1]@2, link[2][1]@4 == link[2][1]@3, link[2][1]@5 == link[2][1]@4, link[2][1]@6 == link[2][1]@5, link[2][1]@7 == link[2][1]@6, link[2][1]@8 == link[2][1]@7, link[2][1]@9 == link[2][1]@8]
negInv_formula:  [And(link[2][1]@0 == True, link[1][1]@0 == True), And(link[2][1]@1 == True, link[1][1]@1 == True), And(link[2][1]@2 == True, link[1][1]@2 == True), And(link[2][1]@3 == True, link[1][1]@3 == True), And(link[2][1]@4 == True, link[1][1]@4 == True), And(link[2][1]@5 == True, link[1][1]@5 == True), And(link[2][1]@6 == True, link[1][1]@6 == True), And(link[2][1]@7 == True, link[1][1]@7 == True), And(link[2][1]@8 == True, link[1][1]@8 == True), And(link[2][1]@9 == True, link[1][1]@9 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  server_connect2
init_fomula:  [Or(And(link[2][1]@0 == False, semaphore[1]@0 == True),
   And(link[1][1]@0 == False, semaphore[1]@0 == True))]
guard_formula:  [semaphore[1]@0 == True, semaphore[1]@1 == True, semaphore[1]@2 == True, semaphore[1]@3 == True, semaphore[1]@4 == True, semaphore[1]@5 == True, semaphore[1]@6 == True, semaphore[1]@7 == True, semaphore[1]@8 == True]
assign_formula:  [And(semaphore[1]@1 == False, link[2][1]@1 == True), And(semaphore[1]@2 == False, link[2][1]@2 == True), And(semaphore[1]@3 == False, link[2][1]@3 == True), And(semaphore[1]@4 == False, link[2][1]@4 == True), And(semaphore[1]@5 == False, link[2][1]@5 == True), And(semaphore[1]@6 == False, link[2][1]@6 == True), And(semaphore[1]@7 == False, link[2][1]@7 == True), And(semaphore[1]@8 == False, link[2][1]@8 == True), And(semaphore[1]@9 == False, link[2][1]@9 == True)]
assumption_formula:  [link[1][1]@1 == link[1][1]@0, link[1][1]@2 == link[1][1]@1, link[1][1]@3 == link[1][1]@2, link[1][1]@4 == link[1][1]@3, link[1][1]@5 == link[1][1]@4, link[1][1]@6 == link[1][1]@5, link[1][1]@7 == link[1][1]@6, link[1][1]@8 == link[1][1]@7, link[1][1]@9 == link[1][1]@8]
negInv_formula:  [And(link[2][1]@0 == True, link[1][1]@0 == True), And(link[2][1]@1 == True, link[1][1]@1 == True), And(link[2][1]@2 == True, link[1][1]@2 == True), And(link[2][1]@3 == True, link[1][1]@3 == True), And(link[2][1]@4 == True, link[1][1]@4 == True), And(link[2][1]@5 == True, link[1][1]@5 == True), And(link[2][1]@6 == True, link[1][1]@6 == True), And(link[2][1]@7 == True, link[1][1]@7 == True), And(link[2][1]@8 == True, link[1][1]@8 == True), And(link[2][1]@9 == True, link[1][1]@9 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  server_disconnect1
init_fomula:  [Or(And(link[2][1]@0 == False, semaphore[1]@0 == True),
   And(link[1][1]@0 == False, semaphore[1]@0 == True))]
guard_formula:  [link[1][1]@0 == True, link[1][1]@1 == True, link[1][1]@2 == True, link[1][1]@3 == True, link[1][1]@4 == True, link[1][1]@5 == True, link[1][1]@6 == True, link[1][1]@7 == True, link[1][1]@8 == True]
assign_formula:  [And(semaphore[1]@1 == True, link[1][1]@1 == False), And(semaphore[1]@2 == True, link[1][1]@2 == False), And(semaphore[1]@3 == True, link[1][1]@3 == False), And(semaphore[1]@4 == True, link[1][1]@4 == False), And(semaphore[1]@5 == True, link[1][1]@5 == False), And(semaphore[1]@6 == True, link[1][1]@6 == False), And(semaphore[1]@7 == True, link[1][1]@7 == False), And(semaphore[1]@8 == True, link[1][1]@8 == False), And(semaphore[1]@9 == True, link[1][1]@9 == False)]
assumption_formula:  [link[2][1]@1 == link[2][1]@0, link[2][1]@2 == link[2][1]@1, link[2][1]@3 == link[2][1]@2, link[2][1]@4 == link[2][1]@3, link[2][1]@5 == link[2][1]@4, link[2][1]@6 == link[2][1]@5, link[2][1]@7 == link[2][1]@6, link[2][1]@8 == link[2][1]@7, link[2][1]@9 == link[2][1]@8]
negInv_formula:  [And(link[2][1]@0 == True, link[1][1]@0 == True), And(link[2][1]@1 == True, link[1][1]@1 == True), And(link[2][1]@2 == True, link[1][1]@2 == True), And(link[2][1]@3 == True, link[1][1]@3 == True), And(link[2][1]@4 == True, link[1][1]@4 == True), And(link[2][1]@5 == True, link[1][1]@5 == True), And(link[2][1]@6 == True, link[1][1]@6 == True), And(link[2][1]@7 == True, link[1][1]@7 == True), And(link[2][1]@8 == True, link[1][1]@8 == True), And(link[2][1]@9 == True, link[1][1]@9 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  server_disconnect2
init_fomula:  [Or(And(link[2][1]@0 == False, semaphore[1]@0 == True),
   And(link[1][1]@0 == False, semaphore[1]@0 == True))]
guard_formula:  [link[2][1]@0 == True, link[2][1]@1 == True, link[2][1]@2 == True, link[2][1]@3 == True, link[2][1]@4 == True, link[2][1]@5 == True, link[2][1]@6 == True, link[2][1]@7 == True, link[2][1]@8 == True]
assign_formula:  [And(semaphore[1]@1 == True, link[2][1]@1 == False), And(semaphore[1]@2 == True, link[2][1]@2 == False), And(semaphore[1]@3 == True, link[2][1]@3 == False), And(semaphore[1]@4 == True, link[2][1]@4 == False), And(semaphore[1]@5 == True, link[2][1]@5 == False), And(semaphore[1]@6 == True, link[2][1]@6 == False), And(semaphore[1]@7 == True, link[2][1]@7 == False), And(semaphore[1]@8 == True, link[2][1]@8 == False), And(semaphore[1]@9 == True, link[2][1]@9 == False)]
assumption_formula:  [link[1][1]@1 == link[1][1]@0, link[1][1]@2 == link[1][1]@1, link[1][1]@3 == link[1][1]@2, link[1][1]@4 == link[1][1]@3, link[1][1]@5 == link[1][1]@4, link[1][1]@6 == link[1][1]@5, link[1][1]@7 == link[1][1]@6, link[1][1]@8 == link[1][1]@7, link[1][1]@9 == link[1][1]@8]
negInv_formula:  [And(link[2][1]@0 == True, link[1][1]@0 == True), And(link[2][1]@1 == True, link[1][1]@1 == True), And(link[2][1]@2 == True, link[1][1]@2 == True), And(link[2][1]@3 == True, link[1][1]@3 == True), And(link[2][1]@4 == True, link[1][1]@4 == True), And(link[2][1]@5 == True, link[1][1]@5 == True), And(link[2][1]@6 == True, link[1][1]@6 == True), And(link[2][1]@7 == True, link[1][1]@7 == True), And(link[2][1]@8 == True, link[1][1]@8 == True), And(link[2][1]@9 == True, link[1][1]@9 == True)]
-----------------------------------------------------------------------------------
found cex in bound  1
inv:  !(link[2][1] = true & link[1][1] = true)
inv_check_result:  False
the time of bmc formula is 0.085933 s
the time of bmc check is 0.010328 s
Times of calling BMC spends 0.348513 s
