init_instance_tmp:  [OpExpr(=, start_node, i), OpExpr(=, message[i][h], false), OpExpr(=, has_lock[h], h = start_node)]
-----------------------------------------------------------------------------------
current_rule:  lock_send1
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[1]@0 == True, has_lock[1]@1 == True, has_lock[1]@2 == True, has_lock[1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == False, message[1][1]@1 == True), And(has_lock[1]@2 == False, message[1][1]@2 == True), And(has_lock[1]@3 == False, message[1][1]@3 == True), And(has_lock[1]@4 == False, message[1][1]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send2
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[1]@0 == True, has_lock[1]@1 == True, has_lock[1]@2 == True, has_lock[1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == False, message[1][2]@1 == True), And(has_lock[1]@2 == False, message[1][2]@2 == True), And(has_lock[1]@3 == False, message[1][2]@3 == True), And(has_lock[1]@4 == False, message[1][2]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send3
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[1]@0 == True, has_lock[1]@1 == True, has_lock[1]@2 == True, has_lock[1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == False, message[1][3]@1 == True), And(has_lock[1]@2 == False, message[1][3]@2 == True), And(has_lock[1]@3 == False, message[1][3]@3 == True), And(has_lock[1]@4 == False, message[1][3]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send4
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[1]@0 == True, has_lock[1]@1 == True, has_lock[1]@2 == True, has_lock[1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == False, message[1][4]@1 == True), And(has_lock[1]@2 == False, message[1][4]@2 == True), And(has_lock[1]@3 == False, message[1][4]@3 == True), And(has_lock[1]@4 == False, message[1][4]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send5
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[2]@0 == True, has_lock[2]@1 == True, has_lock[2]@2 == True, has_lock[2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == False, message[2][1]@1 == True), And(has_lock[2]@2 == False, message[2][1]@2 == True), And(has_lock[2]@3 == False, message[2][1]@3 == True), And(has_lock[2]@4 == False, message[2][1]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send6
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[2]@0 == True, has_lock[2]@1 == True, has_lock[2]@2 == True, has_lock[2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == False, message[2][2]@1 == True), And(has_lock[2]@2 == False, message[2][2]@2 == True), And(has_lock[2]@3 == False, message[2][2]@3 == True), And(has_lock[2]@4 == False, message[2][2]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        message[1][1]@1 ==
                                        message[1][1]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        message[1][1]@2 ==
                                        message[1][1]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        message[1][1]@3 ==
                                        message[1][1]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        message[1][1]@4 ==
                                        message[1][1]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send7
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[2]@0 == True, has_lock[2]@1 == True, has_lock[2]@2 == True, has_lock[2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == False, message[2][3]@1 == True), And(has_lock[2]@2 == False, message[2][3]@2 == True), And(has_lock[2]@3 == False, message[2][3]@3 == True), And(has_lock[2]@4 == False, message[2][3]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send8
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[2]@0 == True, has_lock[2]@1 == True, has_lock[2]@2 == True, has_lock[2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == False, message[2][4]@1 == True), And(has_lock[2]@2 == False, message[2][4]@2 == True), And(has_lock[2]@3 == False, message[2][4]@3 == True), And(has_lock[2]@4 == False, message[2][4]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send9
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[3]@0 == True, has_lock[3]@1 == True, has_lock[3]@2 == True, has_lock[3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == False, message[3][1]@1 == True), And(has_lock[3]@2 == False, message[3][1]@2 == True), And(has_lock[3]@3 == False, message[3][1]@3 == True), And(has_lock[3]@4 == False, message[3][1]@4 == True)]
assumption_formula:  [And(message[3][2]@1 == message[3][2]@0,
    And(message[3][3]@1 == message[3][3]@0,
        And(message[3][4]@1 == message[3][4]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][2]@2 == message[3][2]@1,
    And(message[3][3]@2 == message[3][3]@1,
        And(message[3][4]@2 == message[3][4]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][2]@3 == message[3][2]@2,
    And(message[3][3]@3 == message[3][3]@2,
        And(message[3][4]@3 == message[3][4]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][2]@4 == message[3][2]@3,
    And(message[3][3]@4 == message[3][3]@3,
        And(message[3][4]@4 == message[3][4]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send10
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[3]@0 == True, has_lock[3]@1 == True, has_lock[3]@2 == True, has_lock[3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == False, message[3][2]@1 == True), And(has_lock[3]@2 == False, message[3][2]@2 == True), And(has_lock[3]@3 == False, message[3][2]@3 == True), And(has_lock[3]@4 == False, message[3][2]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][3]@1 == message[3][3]@0,
        And(message[3][4]@1 == message[3][4]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][3]@2 == message[3][3]@1,
        And(message[3][4]@2 == message[3][4]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][3]@3 == message[3][3]@2,
        And(message[3][4]@3 == message[3][4]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][3]@4 == message[3][3]@3,
        And(message[3][4]@4 == message[3][4]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send11
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[3]@0 == True, has_lock[3]@1 == True, has_lock[3]@2 == True, has_lock[3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == False, message[3][3]@1 == True), And(has_lock[3]@2 == False, message[3][3]@2 == True), And(has_lock[3]@3 == False, message[3][3]@3 == True), And(has_lock[3]@4 == False, message[3][3]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][4]@1 == message[3][4]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][4]@2 == message[3][4]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][4]@3 == message[3][4]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][4]@4 == message[3][4]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send12
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[3]@0 == True, has_lock[3]@1 == True, has_lock[3]@2 == True, has_lock[3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == False, message[3][4]@1 == True), And(has_lock[3]@2 == False, message[3][4]@2 == True), And(has_lock[3]@3 == False, message[3][4]@3 == True), And(has_lock[3]@4 == False, message[3][4]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send13
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[4]@0 == True, has_lock[4]@1 == True, has_lock[4]@2 == True, has_lock[4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == False, message[4][1]@1 == True), And(has_lock[4]@2 == False, message[4][1]@2 == True), And(has_lock[4]@3 == False, message[4][1]@3 == True), And(has_lock[4]@4 == False, message[4][1]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send14
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[4]@0 == True, has_lock[4]@1 == True, has_lock[4]@2 == True, has_lock[4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == False, message[4][2]@1 == True), And(has_lock[4]@2 == False, message[4][2]@2 == True), And(has_lock[4]@3 == False, message[4][2]@3 == True), And(has_lock[4]@4 == False, message[4][2]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send15
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[4]@0 == True, has_lock[4]@1 == True, has_lock[4]@2 == True, has_lock[4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == False, message[4][3]@1 == True), And(has_lock[4]@2 == False, message[4][3]@2 == True), And(has_lock[4]@3 == False, message[4][3]@3 == True), And(has_lock[4]@4 == False, message[4][3]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_send16
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [has_lock[4]@0 == True, has_lock[4]@1 == True, has_lock[4]@2 == True, has_lock[4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == False, message[4][4]@1 == True), And(has_lock[4]@2 == False, message[4][4]@2 == True), And(has_lock[4]@3 == False, message[4][4]@3 == True), And(has_lock[4]@4 == False, message[4][4]@4 == True)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv1
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[1][1]@0 == True, message[1][1]@1 == True, message[1][1]@2 == True, message[1][1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == True, message[1][1]@1 == False), And(has_lock[1]@2 == True, message[1][1]@2 == False), And(has_lock[1]@3 == True, message[1][1]@3 == False), And(has_lock[1]@4 == True, message[1][1]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv2
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[1][2]@0 == True, message[1][2]@1 == True, message[1][2]@2 == True, message[1][2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == True, message[1][2]@1 == False), And(has_lock[2]@2 == True, message[1][2]@2 == False), And(has_lock[2]@3 == True, message[1][2]@3 == False), And(has_lock[2]@4 == True, message[1][2]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv3
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[1][3]@0 == True, message[1][3]@1 == True, message[1][3]@2 == True, message[1][3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == True, message[1][3]@1 == False), And(has_lock[3]@2 == True, message[1][3]@2 == False), And(has_lock[3]@3 == True, message[1][3]@3 == False), And(has_lock[3]@4 == True, message[1][3]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv4
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[1][4]@0 == True, message[1][4]@1 == True, message[1][4]@2 == True, message[1][4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == True, message[1][4]@1 == False), And(has_lock[4]@2 == True, message[1][4]@2 == False), And(has_lock[4]@3 == True, message[1][4]@3 == False), And(has_lock[4]@4 == True, message[1][4]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv5
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[2][1]@0 == True, message[2][1]@1 == True, message[2][1]@2 == True, message[2][1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == True, message[2][1]@1 == False), And(has_lock[1]@2 == True, message[2][1]@2 == False), And(has_lock[1]@3 == True, message[2][1]@3 == False), And(has_lock[1]@4 == True, message[2][1]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv6
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[2][2]@0 == True, message[2][2]@1 == True, message[2][2]@2 == True, message[2][2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == True, message[2][2]@1 == False), And(has_lock[2]@2 == True, message[2][2]@2 == False), And(has_lock[2]@3 == True, message[2][2]@3 == False), And(has_lock[2]@4 == True, message[2][2]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        message[1][1]@1 ==
                                        message[1][1]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        message[1][1]@2 ==
                                        message[1][1]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        message[1][1]@3 ==
                                        message[1][1]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        message[1][1]@4 ==
                                        message[1][1]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv7
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[2][3]@0 == True, message[2][3]@1 == True, message[2][3]@2 == True, message[2][3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == True, message[2][3]@1 == False), And(has_lock[3]@2 == True, message[2][3]@2 == False), And(has_lock[3]@3 == True, message[2][3]@3 == False), And(has_lock[3]@4 == True, message[2][3]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv8
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[2][4]@0 == True, message[2][4]@1 == True, message[2][4]@2 == True, message[2][4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == True, message[2][4]@1 == False), And(has_lock[4]@2 == True, message[2][4]@2 == False), And(has_lock[4]@3 == True, message[2][4]@3 == False), And(has_lock[4]@4 == True, message[2][4]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv9
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[3][1]@0 == True, message[3][1]@1 == True, message[3][1]@2 == True, message[3][1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == True, message[3][1]@1 == False), And(has_lock[1]@2 == True, message[3][1]@2 == False), And(has_lock[1]@3 == True, message[3][1]@3 == False), And(has_lock[1]@4 == True, message[3][1]@4 == False)]
assumption_formula:  [And(message[3][2]@1 == message[3][2]@0,
    And(message[3][3]@1 == message[3][3]@0,
        And(message[3][4]@1 == message[3][4]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][2]@2 == message[3][2]@1,
    And(message[3][3]@2 == message[3][3]@1,
        And(message[3][4]@2 == message[3][4]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][2]@3 == message[3][2]@2,
    And(message[3][3]@3 == message[3][3]@2,
        And(message[3][4]@3 == message[3][4]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][2]@4 == message[3][2]@3,
    And(message[3][3]@4 == message[3][3]@3,
        And(message[3][4]@4 == message[3][4]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv10
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[3][2]@0 == True, message[3][2]@1 == True, message[3][2]@2 == True, message[3][2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == True, message[3][2]@1 == False), And(has_lock[2]@2 == True, message[3][2]@2 == False), And(has_lock[2]@3 == True, message[3][2]@3 == False), And(has_lock[2]@4 == True, message[3][2]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][3]@1 == message[3][3]@0,
        And(message[3][4]@1 == message[3][4]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][3]@2 == message[3][3]@1,
        And(message[3][4]@2 == message[3][4]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][3]@3 == message[3][3]@2,
        And(message[3][4]@3 == message[3][4]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][3]@4 == message[3][3]@3,
        And(message[3][4]@4 == message[3][4]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv11
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[3][3]@0 == True, message[3][3]@1 == True, message[3][3]@2 == True, message[3][3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == True, message[3][3]@1 == False), And(has_lock[3]@2 == True, message[3][3]@2 == False), And(has_lock[3]@3 == True, message[3][3]@3 == False), And(has_lock[3]@4 == True, message[3][3]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][4]@1 == message[3][4]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][4]@2 == message[3][4]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][4]@3 == message[3][4]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][4]@4 == message[3][4]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv12
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[3][4]@0 == True, message[3][4]@1 == True, message[3][4]@2 == True, message[3][4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == True, message[3][4]@1 == False), And(has_lock[4]@2 == True, message[3][4]@2 == False), And(has_lock[4]@3 == True, message[3][4]@3 == False), And(has_lock[4]@4 == True, message[3][4]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[1][2]@1 == message[1][2]@0,
                And(message[1][3]@1 == message[1][3]@0,
                    And(message[1][4]@1 == message[1][4]@0,
                        And(message[4][1]@1 ==
                            message[4][1]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[1][2]@2 == message[1][2]@1,
                And(message[1][3]@2 == message[1][3]@1,
                    And(message[1][4]@2 == message[1][4]@1,
                        And(message[4][1]@2 ==
                            message[4][1]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[1][2]@3 == message[1][2]@2,
                And(message[1][3]@3 == message[1][3]@2,
                    And(message[1][4]@3 == message[1][4]@2,
                        And(message[4][1]@3 ==
                            message[4][1]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[1][2]@4 == message[1][2]@3,
                And(message[1][3]@4 == message[1][3]@3,
                    And(message[1][4]@4 == message[1][4]@3,
                        And(message[4][1]@4 ==
                            message[4][1]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv13
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[4][1]@0 == True, message[4][1]@1 == True, message[4][1]@2 == True, message[4][1]@3 == True]
assign_formula:  [And(has_lock[1]@1 == True, message[4][1]@1 == False), And(has_lock[1]@2 == True, message[4][1]@2 == False), And(has_lock[1]@3 == True, message[4][1]@3 == False), And(has_lock[1]@4 == True, message[4][1]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][2]@1 ==
                                message[4][2]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][2]@2 ==
                                message[4][2]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][2]@3 ==
                                message[4][2]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][2]@4 ==
                                message[4][2]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv14
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[4][2]@0 == True, message[4][2]@1 == True, message[4][2]@2 == True, message[4][2]@3 == True]
assign_formula:  [And(has_lock[2]@1 == True, message[4][2]@1 == False), And(has_lock[2]@2 == True, message[4][2]@2 == False), And(has_lock[2]@3 == True, message[4][2]@3 == False), And(has_lock[2]@4 == True, message[4][2]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][3]@1 ==
                                    message[4][3]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][3]@2 ==
                                    message[4][3]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][3]@3 ==
                                    message[4][3]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][3]@4 ==
                                    message[4][3]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv15
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[4][3]@0 == True, message[4][3]@1 == True, message[4][3]@2 == True, message[4][3]@3 == True]
assign_formula:  [And(has_lock[3]@1 == True, message[4][3]@1 == False), And(has_lock[3]@2 == True, message[4][3]@2 == False), And(has_lock[3]@3 == True, message[4][3]@3 == False), And(has_lock[3]@4 == True, message[4][3]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][4]@1 ==
                                        message[4][4]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(has_lock[4]@1 ==
                                        has_lock[4]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][4]@2 ==
                                        message[4][4]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(has_lock[4]@2 ==
                                        has_lock[4]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][4]@3 ==
                                        message[4][4]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(has_lock[4]@3 ==
                                        has_lock[4]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][4]@4 ==
                                        message[4][4]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(has_lock[4]@4 ==
                                        has_lock[4]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
current_rule:  lock_recv16
init_fomula:  [Or(And(And(has_lock[1]@0 == False,
           And(message[3][1]@0 == False, start_node@0 == 3)),
       And(And(has_lock[2]@0 == False,
               And(message[3][2]@0 == False,
                   start_node@0 == 3)),
           And(And(has_lock[3]@0 == True,
                   And(message[3][3]@0 == False,
                       start_node@0 == 3)),
               And(has_lock[4]@0 == False,
                   And(message[3][4]@0 == False,
                       start_node@0 == 3))))),
   Or(And(And(has_lock[1]@0 == True,
              And(message[1][1]@0 == False,
                  start_node@0 == 1)),
          And(And(has_lock[2]@0 == False,
                  And(message[1][2]@0 == False,
                      start_node@0 == 1)),
              And(And(has_lock[3]@0 == False,
                      And(message[1][3]@0 == False,
                          start_node@0 == 1)),
                  And(has_lock[4]@0 == False,
                      And(message[1][4]@0 == False,
                          start_node@0 == 1))))),
      Or(And(And(has_lock[1]@0 == False,
                 And(message[4][1]@0 == False,
                     start_node@0 == 4)),
             And(And(has_lock[2]@0 == False,
                     And(message[4][2]@0 == False,
                         start_node@0 == 4)),
                 And(And(has_lock[3]@0 == False,
                         And(message[4][3]@0 == False,
                             start_node@0 == 4)),
                     And(has_lock[4]@0 == True,
                         And(message[4][4]@0 == False,
                             start_node@0 == 4))))),
         And(And(has_lock[1]@0 == False,
                 And(message[2][1]@0 == False,
                     start_node@0 == 2)),
             And(And(has_lock[2]@0 == True,
                     And(message[2][2]@0 == False,
                         start_node@0 == 2)),
                 And(And(has_lock[3]@0 == False,
                         And(message[2][3]@0 == False,
                             start_node@0 == 2)),
                     And(has_lock[4]@0 == False,
                         And(message[2][4]@0 == False,
                             start_node@0 == 2))))))))]
guard_formula:  [message[4][4]@0 == True, message[4][4]@1 == True, message[4][4]@2 == True, message[4][4]@3 == True]
assign_formula:  [And(has_lock[4]@1 == True, message[4][4]@1 == False), And(has_lock[4]@2 == True, message[4][4]@2 == False), And(has_lock[4]@3 == True, message[4][4]@3 == False), And(has_lock[4]@4 == True, message[4][4]@4 == False)]
assumption_formula:  [And(message[3][1]@1 == message[3][1]@0,
    And(message[3][2]@1 == message[3][2]@0,
        And(message[3][3]@1 == message[3][3]@0,
            And(message[3][4]@1 == message[3][4]@0,
                And(message[1][2]@1 == message[1][2]@0,
                    And(message[1][3]@1 == message[1][3]@0,
                        And(message[1][4]@1 ==
                            message[1][4]@0,
                            And(message[4][1]@1 ==
                                message[4][1]@0,
                                And(message[4][2]@1 ==
                                    message[4][2]@0,
                                    And(message[4][3]@1 ==
                                        message[4][3]@0,
                                        And(has_lock[1]@1 ==
                                        has_lock[1]@0,
                                        And(message[2][1]@1 ==
                                        message[2][1]@0,
                                        And(has_lock[2]@1 ==
                                        has_lock[2]@0,
                                        And(has_lock[3]@1 ==
                                        has_lock[3]@0,
                                        And(message[2][3]@1 ==
                                        message[2][3]@0,
                                        And(message[2][4]@1 ==
                                        message[2][4]@0,
                                        And(start_node@1 ==
                                        start_node@0,
                                        And(message[1][1]@1 ==
                                        message[1][1]@0,
                                        message[2][2]@1 ==
                                        message[2][2]@0)))))))))))))))))), And(message[3][1]@2 == message[3][1]@1,
    And(message[3][2]@2 == message[3][2]@1,
        And(message[3][3]@2 == message[3][3]@1,
            And(message[3][4]@2 == message[3][4]@1,
                And(message[1][2]@2 == message[1][2]@1,
                    And(message[1][3]@2 == message[1][3]@1,
                        And(message[1][4]@2 ==
                            message[1][4]@1,
                            And(message[4][1]@2 ==
                                message[4][1]@1,
                                And(message[4][2]@2 ==
                                    message[4][2]@1,
                                    And(message[4][3]@2 ==
                                        message[4][3]@1,
                                        And(has_lock[1]@2 ==
                                        has_lock[1]@1,
                                        And(message[2][1]@2 ==
                                        message[2][1]@1,
                                        And(has_lock[2]@2 ==
                                        has_lock[2]@1,
                                        And(has_lock[3]@2 ==
                                        has_lock[3]@1,
                                        And(message[2][3]@2 ==
                                        message[2][3]@1,
                                        And(message[2][4]@2 ==
                                        message[2][4]@1,
                                        And(start_node@2 ==
                                        start_node@1,
                                        And(message[1][1]@2 ==
                                        message[1][1]@1,
                                        message[2][2]@2 ==
                                        message[2][2]@1)))))))))))))))))), And(message[3][1]@3 == message[3][1]@2,
    And(message[3][2]@3 == message[3][2]@2,
        And(message[3][3]@3 == message[3][3]@2,
            And(message[3][4]@3 == message[3][4]@2,
                And(message[1][2]@3 == message[1][2]@2,
                    And(message[1][3]@3 == message[1][3]@2,
                        And(message[1][4]@3 ==
                            message[1][4]@2,
                            And(message[4][1]@3 ==
                                message[4][1]@2,
                                And(message[4][2]@3 ==
                                    message[4][2]@2,
                                    And(message[4][3]@3 ==
                                        message[4][3]@2,
                                        And(has_lock[1]@3 ==
                                        has_lock[1]@2,
                                        And(message[2][1]@3 ==
                                        message[2][1]@2,
                                        And(has_lock[2]@3 ==
                                        has_lock[2]@2,
                                        And(has_lock[3]@3 ==
                                        has_lock[3]@2,
                                        And(message[2][3]@3 ==
                                        message[2][3]@2,
                                        And(message[2][4]@3 ==
                                        message[2][4]@2,
                                        And(start_node@3 ==
                                        start_node@2,
                                        And(message[1][1]@3 ==
                                        message[1][1]@2,
                                        message[2][2]@3 ==
                                        message[2][2]@2)))))))))))))))))), And(message[3][1]@4 == message[3][1]@3,
    And(message[3][2]@4 == message[3][2]@3,
        And(message[3][3]@4 == message[3][3]@3,
            And(message[3][4]@4 == message[3][4]@3,
                And(message[1][2]@4 == message[1][2]@3,
                    And(message[1][3]@4 == message[1][3]@3,
                        And(message[1][4]@4 ==
                            message[1][4]@3,
                            And(message[4][1]@4 ==
                                message[4][1]@3,
                                And(message[4][2]@4 ==
                                    message[4][2]@3,
                                    And(message[4][3]@4 ==
                                        message[4][3]@3,
                                        And(has_lock[1]@4 ==
                                        has_lock[1]@3,
                                        And(message[2][1]@4 ==
                                        message[2][1]@3,
                                        And(has_lock[2]@4 ==
                                        has_lock[2]@3,
                                        And(has_lock[3]@4 ==
                                        has_lock[3]@3,
                                        And(message[2][3]@4 ==
                                        message[2][3]@3,
                                        And(message[2][4]@4 ==
                                        message[2][4]@3,
                                        And(start_node@4 ==
                                        start_node@3,
                                        And(message[1][1]@4 ==
                                        message[1][1]@3,
                                        message[2][2]@4 ==
                                        message[2][2]@3))))))))))))))))))]
negInv_formula:  [And(message[2][2]@0 == True, message[1][1]@0 == True), And(message[2][2]@1 == True, message[1][1]@1 == True), And(message[2][2]@2 == True, message[1][1]@2 == True), And(message[2][2]@3 == True, message[1][1]@3 == True), And(message[2][2]@4 == True, message[1][1]@4 == True)]
-----------------------------------------------------------------------------------
found cex in bound  0
inv:  !(message[2][2] = true & message[1][1] = true)
inv_check_result:  False
the total times of bmc are 5 bound
the time of bmc formula is 2.322878 s
the time of bmc check is 0.010983 s
Times of calling BMC spends 2.617107 s
